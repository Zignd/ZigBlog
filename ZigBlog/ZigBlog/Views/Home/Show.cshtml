@using ZigBlog.Models
@using ZigBlog.Models.ViewModels
@using ZigBlog.Translations

@model HomeShowViewModel

@{
    ViewBag.Title = "Show";
}

@helper CommentPostForm()
{
var routeValues = new { titleUrl = Model.Post.TitleUrl };
var ajaxOptions = new AjaxOptions { OnSuccess = "onSuccessPostComment", OnFailure = "onFailurePostComment", UpdateTargetId = "newComment" };

using (Ajax.BeginForm("PostComment", routeValues, ajaxOptions))
{
        @Html.HiddenFor(x => x.Comment.PostId)

        <div class="panel panel-default">
            <div class="zg-comment-body">
                <div class="zg-comment-body-avatar">
                    <div class="zg-comment-body-avatar-picture" style="background-image: url('/Content/Images/Avatars/@(User.Identity.Name).png');"></div>
                    <div class="zg-comment-body-avatar-username">@User.Identity.Name</div>
                </div>
                @Html.TextAreaFor(x => x.Comment.Content, new { @class = "zg-comment-body-textarea" })
                @Html.ValidationMessageFor(x => x.Comment.Content)
            </div>
            <div class="panel-footer">
                <button class="btn btn-sm btn-primary">@Translation.PostComment</button>
            </div>
        </div>
}
}

@Html.Partial("_Post", new HomePostPartialViewModel { Post = Model.Post, IsHomePageMode = false })

<h3 style="margin-bottom: 1em; margin-top: -1em;">
    @Translation.CommentsSection <small>@Translation.CommentsSectionSmall</small>
</h3>

@if (User.Identity.IsAuthenticated)
{
    @CommentPostForm()
}
else
{
    <div class="panel panel-default">
        <div style="margin: .8em;">@Translation.CantComment1 @Html.ActionLink(Translation.UserSignUp, "SignUp", "User") @Translation.CantComment2 @Html.ActionLink(Translation.UserSignIn, "SignIn", "User").</div>
    </div>
}

<div id="commentsRoot">
    @foreach (var comment in Model.Post.Comments)
    {
        Html.RenderPartial("_Comment", comment);
    }
    <div id="newComment"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/zgpostpartial")

    <script type="text/javascript">
        /// <reference path="~/Scripts/jquery-2.1.4.js"/>
        /// <reference path="~/Scripts/jquery.validate.js"/>
        /// <reference path="~/Scripts/jquery.validate.unobtrusive.js"/>

        'use strict';

        function onSuccessPostComment(data) {
            console.log('onSuccessPostComment');
            console.log(data);
            console.log('---');

            $('#newComment').removeAttr('id');
            $('#commentsRoot').append($('<div id="newComment"></div>'))
        }

        function onFailurePostComment(data) {
            console.log('onFailurePostComment');
            console.log(data);
            console.log('---');
        }
    </script>
}
