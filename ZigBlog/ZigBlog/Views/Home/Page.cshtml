@using ZigBlog.Models.ViewModels

@model HomePageViewModel

@{
    ViewBag.Title = "Page";
}

<div class="page-header">
    <h1>Zignd's Blog <small style="font-family: consolas, monospace">Just a bit of my &lt;3 for &lt;&gt;</small></h1>
</div>

@foreach (var post in Model.Posts)
{
    @Html.Partial("PostPartial", new HomePostPartialModel
    {
        HomePageMode = true,
        Post = post
    })
}

@{ 
    var totalPages = Math.Ceiling((decimal)Model.TotalPostsCount / Model.PostsPerPage);
}

<div style="display: flex; justify-content: space-between;">
    <nav style="@(totalPages <= 1 ? "visibility: hidden" : null)">
        <ul class="pagination">
            @{
                var urlPreviousPage = Url.Action("Page", new { page = Model.CurrentPage - 1, postsPerPage = Model.PostsPerPage });
                var urlNextPage = Url.Action("Page", new { page = Model.CurrentPage + 1, postsPerPage = Model.PostsPerPage });
            }

            @* Navigation button << *@
            <li class="@(Model.CurrentPage == 1 ? "disabled" : null)">
                <a href="@(Model.CurrentPage != 1 ? urlPreviousPage : null)">
                    <span>&laquo;</span>
                </a>
            </li>

            @* Navigation button 1 *@
            <li class="@(Model.CurrentPage == 1 ? "active" : null)"><a href="@Url.Action("Page", new { page = 1, postsPerPage = Model.PostsPerPage })">1</a></li>

            @* When the number of pages is below or equal to 7, there's no need to build a complex pagination control, so I just list the links to the pages *@
            @if (totalPages <= 7)
            {
                for (int page = 2; page < totalPages; page++)
                {
                    if (totalPages >= page)
                    {
                        var pageUrl = Url.Action("Page", new { page = page, postsPerPage = Model.PostsPerPage });

                        <li class="@(Model.CurrentPage == page ? "active" : null)"><a href="@pageUrl">@page</a></li>
                    }
                }
            }
            else
            {
                @* Navigation buttons from 2 to 5 *@
                if (Model.CurrentPage >= 1 && Model.CurrentPage < 5)
                {
                    for (int page = 2; page <= 5; page++)
                    {
                        if (totalPages >= page)
                        {
                            var pageUrl = Url.Action("Page", new { page = page, postsPerPage = Model.PostsPerPage });

                            <li class="@(Model.CurrentPage == page ? "active" : null)"><a href="@pageUrl">@page</a></li>
                        }
                    }
                }

                <li><a>...</a></li>

                @* Middle navigation buttons *@
                if (Model.CurrentPage >= 5 && Model.CurrentPage <= totalPages - 4)
                {
                    <li><a href="@Url.Action("Page", new { page = Model.CurrentPage - 2 })">@(Model.CurrentPage - 2)</a></li>
                    <li><a href="@Url.Action("Page", new { page = Model.CurrentPage - 1 })">@(Model.CurrentPage - 1)</a></li>
                    <li class="active"><a href="@Url.Action("Page", new { page = Model.CurrentPage })">@(Model.CurrentPage)</a></li>
                    <li><a href="@Url.Action("Page", new { page = Model.CurrentPage + 1 })">@(Model.CurrentPage + 1)</a></li>
                    <li><a href="@Url.Action("Page", new { page = Model.CurrentPage + 2 })">@(Model.CurrentPage + 2)</a></li>
                    <li><a>...</a></li>
                }

                @* Navigation buttons from (totalPages - 4) to (totalPages) *@
                if (Model.CurrentPage > totalPages - 4 && totalPages - 4 > 5)
                {
                    <li><a href="@Url.Action("Page", new { page = totalPages - 4, postsPerPage = Model.PostsPerPage })">@(totalPages - 4)</a></li>
                    <li class="@(Model.CurrentPage == totalPages - 3 ? "active" : null)"><a href="@(Model.CurrentPage != totalPages - 3 ? Url.Action("Page", new { page = totalPages - 1, postsPerPage = Model.PostsPerPage }) : null)">@(totalPages - 3)</a></li>
                    <li class="@(Model.CurrentPage == totalPages - 2 ? "active" : null)"><a href="@(Model.CurrentPage != totalPages - 2 ? Url.Action("Page", new { page = totalPages - 1, postsPerPage = Model.PostsPerPage }) : null)">@(totalPages - 2)</a></li>
                    <li class="@(Model.CurrentPage == totalPages - 1 ? "active" : null)"><a href="@(Model.CurrentPage != totalPages - 1 ? Url.Action("Page", new { page = totalPages - 1, postsPerPage = Model.PostsPerPage }) : null)">@(totalPages - 1)</a></li>
                }
            }

            <li class="@(Model.CurrentPage == totalPages ? "active" : null)"><a href="@(Model.CurrentPage != totalPages ? @Url.Action("Page", new { page = totalPages, postsPerPage = Model.PostsPerPage }) : null)">@totalPages</a></li>

            @* >> *@
            <li class="@(Model.CurrentPage == totalPages ? "disabled" : null)">
                <a href="@(Model.CurrentPage != totalPages ? urlNextPage : null)">
                    <span>&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>

    <nav>
        <ul class="pagination">
            <li class="@(Model.PostsPerPage == 15 ? "active" : null)"><a href="@Url.Action("Page", new { page = 1, postsPerPage = 15 })">15</a></li>
            <li class="@(Model.PostsPerPage == 30 ? "active" : null)"><a href="@Url.Action("Page", new { page = 1, postsPerPage = 30 })">30</a></li>
            <li class="@(Model.PostsPerPage == 50 ? "active" : null)"><a href="@Url.Action("Page", new { page = 1, postsPerPage = 50 })">50</a></li>
        </ul>
    </nav>
</div>