@model ZigBlog.Models.ViewModels.HomePageViewModel

@{
    ViewBag.Title = "Page";
}

<div class="page-header">
    <h1>Zignd's Blog <small style="font-family: consolas, monospace">Just a bit of my &lt;3 for &lt;&gt;</small></h1>
</div>

@foreach (var post in Model.Posts)
{
    <div class="panel panel-default" style="margin-bottom: 5em;">
        <div class="panel-heading">
            <div style="display: flex; align-items: center; justify-content: space-between;">
                <div>
                    <h1>@post.Title</h1>
                </div>
                <div style="display: flex; align-items: center;">
                    <span style="font-size: 2em;">@post.Likes.Count</span>

                    @if (post.Likes.Count == 0)
                    {
                        <span class="glyphicon glyphicon-heart-empty" style="font-size: 3em;"></span>
                    }
                    else
                    {
                        <span class="glyphicon glyphicon-heart" style="font-size: 3em;"></span>
                    }
                </div>
            </div>
        </div>
        <div class="panel-body" style="height: 7em; overflow: hidden;">
            @post.Content
        </div>
        <div class="panel-footer">
            <div>[Read more]</div>
            <div>@post.Comments.Count ?Commments</div>
        </div>
    </div>
}

<div style="display: flex; justify-content: space-between;">
    <nav>
        <ul class="pagination">
            @{
                var totalPages = Model.TotalPostsCount / Model.PostsPerPage;

                var urlPreviousPage = Url.Action("Page", new { arg = Model.CurrentPage - 1, postsPerPage = Model.PostsPerPage });
                var urlNextPage = Url.Action("Page", new { arg = Model.CurrentPage + 1, postsPerPage = Model.PostsPerPage });
            }

            @* Navigation button << *@
            <li class="@(Model.CurrentPage == 1 ? "disabled" : null)">
                <a href="@(Model.CurrentPage != 1 ? urlPreviousPage : null)">
                    <span>&laquo;</span>
                </a>
            </li>

            @* Navigation button 1 *@
            <li class="@(Model.CurrentPage == 1 ? "active" : null)"><a href="@Url.Action("Page", new { arg = 1, postsPerPage = Model.PostsPerPage })">1</a></li>

            @* Navigation buttons from 2 to 5 *@
            @if (Model.CurrentPage >= 1 && Model.CurrentPage < 5)
            {
                for (int page = 2; page <= 5; page++)
                {
                    if (totalPages >= page)
                    {
                        var pageUrl = Url.Action("Page", new { arg = page, postsPerPage = Model.PostsPerPage });

                        <li class="@(Model.CurrentPage == page ? "active" : null)"><a href="@pageUrl">@page</a></li>
                    }
                }
            }

            <li><a>...</a></li>

            @* Middle navigation buttons *@
            @if (Model.CurrentPage >= 5 && Model.CurrentPage <= totalPages - 4)
            {
                <li><a href="@Url.Action("Page", new { arg = Model.CurrentPage - 2 })">@(Model.CurrentPage - 2)</a></li>
                <li><a href="@Url.Action("Page", new { arg = Model.CurrentPage - 1 })">@(Model.CurrentPage - 1)</a></li>
                <li class="active"><a href="@Url.Action("Page", new { arg = Model.CurrentPage })">@(Model.CurrentPage)</a></li>
                <li><a href="@Url.Action("Page", new { arg = Model.CurrentPage + 1 })">@(Model.CurrentPage + 1)</a></li>
                <li><a href="@Url.Action("Page", new { arg = Model.CurrentPage + 2 })">@(Model.CurrentPage + 2)</a></li>
                <li><a>...</a></li>
            }

            @* Navigation buttons from (totalPages - 4) to (totalPages) *@
            @if (Model.CurrentPage > totalPages - 4)
            {
                <li><a href="@Url.Action("Page", new { arg = totalPages - 4, postsPerPage = Model.PostsPerPage })">@(totalPages - 4)</a></li>
                <li class="@(Model.CurrentPage == totalPages - 3 ? "active" : null)"><a href="@Url.Action("Page", new { arg = totalPages - 3, postsPerPage = Model.PostsPerPage })">@(totalPages - 3)</a></li>
                <li class="@(Model.CurrentPage == totalPages - 2 ? "active" : null)"><a href="@Url.Action("Page", new { arg = totalPages - 2, postsPerPage = Model.PostsPerPage })">@(totalPages - 2)</a></li>
                <li class="@(Model.CurrentPage == totalPages - 1 ? "active" : null)"><a href="@Url.Action("Page", new { arg = totalPages - 1, postsPerPage = Model.PostsPerPage })">@(totalPages - 1)</a></li>
            }

            <li class="@(Model.CurrentPage == totalPages ? "active" : null)"><a href="@Url.Action("Page", new { arg = totalPages, postsPerPage = Model.PostsPerPage })">@totalPages</a></li>

            @* >> *@
            <li class="@(Model.CurrentPage == totalPages ? "disabled" : null)">
                <a href="@(Model.CurrentPage != totalPages ? urlNextPage : null)">
                    <span>&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>

    <nav>
        <ul class="pagination">
            <li class="@(Model.PostsPerPage == 15 ? "active" : null)"><a href="@Url.Action("Page", new { arg = 1, postsPerPage = 15 })">15</a></li>
            <li class="@(Model.PostsPerPage == 30 ? "active" : null)"><a href="@Url.Action("Page", new { arg = 1, postsPerPage = 30 })">30</a></li>
            <li class="@(Model.PostsPerPage == 50 ? "active" : null)"><a href="@Url.Action("Page", new { arg = 1, postsPerPage = 50 })">50</a></li>
        </ul>
    </nav>
</div>